class Solution {
public static int uniquePathsWithObstacles(int[][] obstacleGrid) {
        int dp[][]=new int[obstacleGrid.length][obstacleGrid[0].length];
        for(int i=0;i<obstacleGrid.length;i++){
            for(int j=0;j<obstacleGrid[0].length;j++){
                if(obstacleGrid[i][j]==0) obstacleGrid[i][j]=1;
                else obstacleGrid[i][j]=0;
            }
        }
        if(obstacleGrid[0][0]==0)
            return 0;
        if(obstacleGrid[obstacleGrid.length-1][obstacleGrid[0].length-1]==0)
            return 0;
        dp[0][0]=1;
        for(int i=1;i<obstacleGrid[0].length;i++){
            if(dp[0][i-1]==0 || obstacleGrid[0][i]==0 )
                dp[0][i]=0;
            else dp[0][i]=1;
        }
        for(int i=1;i<dp.length;i++){
            if(dp[i-1][0]==0 || obstacleGrid[i][0]==0)
                dp[i][0]=0;
            else dp[i][0]=1;
        }
        for(int i=1;i<dp.length;i++){
            for(int j=1;j<dp[0].length;j++){
                if(obstacleGrid[i][j]!=0)
                    dp[i][j]=dp[i-1][j]+dp[i][j-1];
            }
        }
        return dp[dp.length-1][dp[0].length-1];
            
    }
}
